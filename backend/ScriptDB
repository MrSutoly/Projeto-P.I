-- Criar banco e usar
CREATE DATABASE IF NOT EXISTS ProjectPI;
USE ProjectPI;

-- Usuários
CREATE TABLE IF NOT EXISTS usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('admin', 'professor', 'aluno') NOT NULL
);

-- Turmas
CREATE TABLE IF NOT EXISTS turmas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    codigo VARCHAR(6) NOT NULL UNIQUE
);

-- Relacionamento 1:N (turmas para usuários)
ALTER TABLE usuarios
ADD COLUMN class_id INT,
ADD FOREIGN KEY (class_id) REFERENCES turmas(id) ON DELETE SET NULL;

-- Mascotes (adicionada porque estava referenciada)
CREATE TABLE IF NOT EXISTS mascotes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL
);

-- Atividades
CREATE TABLE IF NOT EXISTS atividades (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(100) NOT NULL,
    descricao TEXT,
    link_constante TEXT,
    mascote_id INT,
    FOREIGN KEY (mascote_id) REFERENCES mascotes(id)
);

-- Semanas
CREATE TABLE IF NOT EXISTS semanas (
    numero INT PRIMARY KEY,
    data_inicio DATE NOT NULL,
    data_fim DATE NOT NULL
);

-- Relacionamento atividade/semana
ALTER TABLE atividades
ADD COLUMN semana_numero INT,
ADD FOREIGN KEY (semana_numero) REFERENCES semanas(numero);

-- Quizzes
CREATE TABLE IF NOT EXISTS quizzes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    pergunta TEXT NOT NULL,
    tipo ENUM('kahoot', 'clicar_objeto') NOT NULL,
    atividade_id INT,
    FOREIGN KEY (atividade_id) REFERENCES atividades(id) ON DELETE CASCADE
);

-- Respostas
CREATE TABLE IF NOT EXISTS respostas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    resposta TEXT,
    correta BOOLEAN,
    usuario_id INT,
    quiz_id INT,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (quiz_id) REFERENCES quizzes(id) ON DELETE CASCADE
);

-- Pontuações
CREATE TABLE IF NOT EXISTS pontuacoes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    pontos INT NOT NULL,
    completude BOOLEAN DEFAULT TRUE,
    class_id INT,
    resposta_id INT,
    FOREIGN KEY (class_id) REFERENCES turmas(id),
    FOREIGN KEY (resposta_id) REFERENCES respostas(id) ON DELETE CASCADE
);

-- Reciclagem
CREATE TABLE IF NOT EXISTS reciclagem (
    id INT AUTO_INCREMENT PRIMARY KEY,
    quantidade INT NOT NULL,
    class_id INT,
    FOREIGN KEY (class_id) REFERENCES turmas(id)
);

-- Links para atividades
CREATE TABLE IF NOT EXISTS links_atividade (
    id INT AUTO_INCREMENT PRIMARY KEY,
    url TEXT NOT NULL,
    class_id INT,
    FOREIGN KEY (class_id) REFERENCES turmas(id)
);
